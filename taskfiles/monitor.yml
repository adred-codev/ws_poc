version: '3'

# Monitoring, health checks, and metrics tasks

tasks:
  health:
    desc: Check all health endpoints
    cmds:
      - echo "üîç Checking health endpoints..."
      - echo "\nüìä Go Server:"
      - curl -s http://localhost:3004/health | jq '.' || echo "‚ùå Go server not responding"
      - echo "\nüì° Publisher:"
      - curl -s http://localhost:3003/health | jq '.' || echo "‚ùå Publisher not responding"
      - echo "\n‚úÖ Health check complete"

  health:go:
    desc: Check Go server health
    cmds:
      - curl -s http://localhost:3004/health | jq '.'

  metrics:
    desc: View Go server Prometheus metrics
    cmds:
      - curl -s http://localhost:3004/metrics

  publisher:stats:
    desc: View publisher statistics
    cmds:
      - curl -s http://localhost:3003/stats | jq '.'

  grafana:
    desc: Open Grafana dashboard in browser
    cmds:
      - open http://localhost:3010 || xdg-open http://localhost:3010 || echo "Open http://localhost:3010 in your browser"

  prometheus:
    desc: Open Prometheus UI in browser
    cmds:
      - open http://localhost:9091 || xdg-open http://localhost:9091 || echo "Open http://localhost:9091 in your browser"

  targets:
    desc: Check Prometheus scrape targets status
    cmds:
      - "curl -s http://localhost:9091/api/v1/targets | jq '.data.activeTargets[] | {job: .labels.job, state: .health}'"

  logs:
    desc: Open Grafana logs dashboard in browser
    cmds:
      - open "http://localhost:3010/d/websocket-logs-v2" || xdg-open "http://localhost:3010/d/websocket-logs-v2" || echo "Open http://localhost:3010/d/websocket-logs-v2 in your browser"

  loki:
    desc: Query Loki logs directly (CONTAINER=odin-ws-go QUERY='')
    vars:
      CONTAINER: '{{.CONTAINER | default "odin-ws-go"}}'
      QUERY: '{{.QUERY | default ""}}'
    cmds:
      - |
        curl -s -G "http://localhost:3101/loki/api/v1/query_range" \
          --data-urlencode 'query={container_name="{{.CONTAINER}}"}{{.QUERY}}' \
          --data-urlencode "start=$(date -u -v-5M '+%s')000000000" \
          --data-urlencode "end=$(date -u '+%s')000000000" \
          | jq '.data.result[] | .values[] | .[1]' -r
