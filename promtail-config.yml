server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Scrape logs from Docker containers
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      # Only scrape containers in odin-network
      - source_labels: ['__meta_docker_container_name']
        regex: '/(odin-.*)'
        action: keep

      # Extract container name
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'

      # Extract container ID
      - source_labels: ['__meta_docker_container_id']
        regex: '(.*)'
        target_label: 'container_id'

      # Extract image name
      - source_labels: ['__meta_docker_container_image']
        regex: '(.*)'
        target_label: 'image'

      # Add service label based on container name
      - source_labels: ['container_name']
        regex: 'odin-ws-go'
        target_label: 'service'
        replacement: 'websocket-go'

      - source_labels: ['container_name']
        regex: 'odin-publisher'
        target_label: 'service'
        replacement: 'publisher'

      - source_labels: ['container_name']
        regex: 'odin-nats'
        target_label: 'service'
        replacement: 'nats'

      - source_labels: ['container_name']
        regex: 'odin-prometheus'
        target_label: 'service'
        replacement: 'prometheus'

      - source_labels: ['container_name']
        regex: 'odin-grafana'
        target_label: 'service'
        replacement: 'grafana'

      # Add environment label
      - target_label: 'environment'
        replacement: 'docker'

      # Add job label
      - target_label: 'job'
        replacement: 'docker-containers'

    pipeline_stages:
      # Parse timestamp if present
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05'
          fallback_formats:
            - RFC3339
            - RFC3339Nano

      # Extract log level
      - regex:
          expression: '(?i)(?P<level>(DEBUG|INFO|WARN|WARNING|ERROR|FATAL|TRACE))'
      - labels:
          level:

      # Extract message content (for searching)
      - regex:
          expression: '(?P<message>.*)'

      # Add labels for specific patterns
      - match:
          selector: '{service="websocket-go"}'
          stages:
            - regex:
                expression: '(?i)(broadcast|connection|message|client)'
            - labels:
                event_type:

      - match:
          selector: '{service="publisher"}'
          stages:
            - regex:
                expression: '(?i)(publish|token|price|nats)'
            - labels:
                event_type:
