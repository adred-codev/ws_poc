# WebSocket Server - Isolated Setup
# Instance: odin-ws-go (dedicated e2-small)
# Purpose: Handle WebSocket connections only, isolated for clean metrics
#
# This compose file is templated. Before deployment, substitute:
#   ${BACKEND_INTERNAL_IP} - Internal IP of backend instance running NATS
#
# Example:
#   export BACKEND_INTERNAL_IP=10.128.0.2
#   envsubst < docker-compose.yml | docker compose -f - up -d

services:
  ws-go:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: odin-ws-go
    ports:
      - "0.0.0.0:3004:3002"
    command:
      - "./odin-ws-server"
      - "-addr"
      - ":3002"
      - "-nats"
      - "nats://${BACKEND_INTERNAL_IP}:4222"
    environment:
      # Resource limits (e2-small dedicated)
      - WS_CPU_LIMIT=1.8
      - WS_MEMORY_LIMIT=1879048192 # 1792MB in bytes

      # Capacity: 10,000 connections
      - WS_MAX_CONNECTIONS=10000

      # Worker pool sizing
      # Formula: max(32, connections/16) = max(32, 10000/16) = 625 → 256 (conservative)
      # Load per worker: (10000 × 20) / 256 = 781 items/sec
      - WS_WORKER_POOL_SIZE=256
      - WS_WORKER_QUEUE_SIZE=25600 # 100x workers

      # Rate limiting (safety limits, fixed at 20)
      # Each NATS msg = 1 broadcast to ALL connections
      # At 10k conns: 20 msg/sec × 10k = 200k total writes/sec
      # Current real load: ~12 msg/sec (well below limit)
      - WS_MAX_NATS_RATE=1000
      - WS_MAX_BROADCAST_RATE=1000

      # Goroutine limit
      # Formula: ((10000 × 2) + 256 + 13) × 1.2 = 24,323
      # Rounded: 25,000
      - WS_MAX_GOROUTINES=25000

      # Safety thresholds
      - WS_CPU_REJECT_THRESHOLD=75.0
      - WS_CPU_PAUSE_THRESHOLD=80.0

      # Logging
      - LOG_LEVEL=info
      - LOG_FORMAT=json

    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.8"
          memory: 1792M
    ulimits:
      nofile:
        soft: 200000
        hard: 200000
