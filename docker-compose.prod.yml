version: "3.8"

# Production overrides for docker-compose.yml
# Usage: docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
#
# ============================================================================
# E2-SMALL RESOURCE CONFIGURATION (GCP)
# ============================================================================
# Total Available: 2 vCPU (shared), 2GB RAM
# Cost: $12.23/month (vs e2-micro $6.12/month or FREE with free tier)
#
# Current Allocation (inherited from docker-compose.yml):
#   ws-go:      1.5 CPU (75%)    768M (38%)  - WebSocket server (priority)
#   nats:       0.25 CPU (12%)   128M (6%)   - Message broker
#   prometheus: 0.15 CPU (7.5%)  128M (6%)   - Metrics (7d retention)
#   grafana:    0.1 CPU (5%)     256M (12%)  - Dashboards
#   loki:       0.1 CPU (5%)     128M (6%)   - Logs
#   publisher:  0.1 CPU (5%)     64M (3%)    - Test publisher
#   promtail:   0.1 CPU (5%)     64M (3%)    - Log collector
#   -----------
#   TOTAL:      2.3 CPU (115%)   1536M (75%) ✅ FITS WITH HEADROOM
#
# Notes:
#   - Total CPU 15% over limit but acceptable (burstable e2-small)
#   - Memory at 75% with 25% headroom (512MB free)
#   - ws-go has priority and will get resources first
#   - Monitoring services now have sufficient memory (no OOM kills)
#   - Prometheus retention: 7d (can increase to 15-30d if needed)
#   - Upgraded from e2-micro due to Grafana/Loki/Promtail OOM kills
#
# Previous Issues (RESOLVED):
#   - e2-micro: Grafana/Loki/Promtail OOM killed (32-64MB limits too low)
#   - e2-small: Grafana memory starvation at 98.77% (128M → 256M)
#
# ============================================================================
# PRODUCTION OVERRIDES
# ============================================================================
# This file only overrides:
#   - Restart policies (restart: always)
#   - Log rotation (10M max size, 3 files)
#   - External port exposure
#   - Grafana admin password from environment
#
# Resource limits are inherited from docker-compose.yml and NOT changed here
# to maintain consistency between dev and production environments.
# ============================================================================

services:
  ws-go:
    restart: always
    ports:
      - "3004:3002" # Expose to external (port 3004 externally, 3002 internally)
    environment:
      # Production environment overrides (inherits from docker-compose.yml)
      # Uncomment and modify if production needs different values:

      # Resource configuration
      # - WS_CPU_LIMIT=1.5
      # - WS_MEMORY_LIMIT=805306368
      # - WS_MAX_CONNECTIONS=500
      # - WS_WORKER_POOL_SIZE=32
      # - WS_WORKER_QUEUE_SIZE=3200

      # Rate limiting
      # - WS_MAX_NATS_RATE=20
      # - WS_MAX_BROADCAST_RATE=20
      # - WS_MAX_GOROUTINES=1000

      # Safety thresholds
      # - WS_CPU_REJECT_THRESHOLD=75.0
      # - WS_CPU_PAUSE_THRESHOLD=80.0

      # Logging (may want 'warn' or 'error' in production to reduce volume)
      - LOG_LEVEL=info # Options: debug, info, warn, error
      - LOG_FORMAT=json # json for Loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  publisher:
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nats:
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    restart: always
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d" # Same as dev (e2-micro constraint)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    restart: always
    ports:
      - "3010:3000" # Expose to external
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=http://${EXTERNAL_IP:-localhost}:3010
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  loki:
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  promtail:
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
